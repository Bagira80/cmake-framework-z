##
# @file
# @brief The CPack-time project CPack configuration for the "DEB" generator.
# @note This (CPack-)script is auto-generated. Do not edit it directly!
# @note This script will be included automatically by CPack from the `CPackProjectConfig` file
#       with `CPACK_GENERATOR` set to `DEB`.
# @details Overrides some of the general CPack variables and sets specific CPack variables for the
#          "DEB" generator, that will be used to create Debian packages.
#

# Sanity-checks.
if (NOT CPACK_GENERATOR STREQUAL "DEB")
    message( SEND_ERROR "CPackProjectConfig: Generator '${CPACK_GENERATOR}' is not supported by DEB-generator." )
    return()
endif()


# ----------------------------------------------------------------------
# Some default settings for using the DEB-generator
# ----------------------------------------------------------------------

# Enforce creating multiple packages (if not already set).
if (NOT DEFINED CPACK_DEB_COMPONENT_INSTALL)
    set( CPACK_DEB_COMPONENT_INSTALL                ON )
endif()
# Ignore grouping of components and work with components directly (instead of groups)!
set( CPACK_COMPONENTS_GROUPING                      "IGNORE" )
# Use the following package name if monolithic install.
set( CPACK_DEBIAN_PACKAGE_NAME                      "@project_package_fullname@" )
set( CPACK_DEBIAN_FILE_NAME                         DEB-DEFAULT )

# Always use XZ to compress packages.
set( CPACK_DEBIAN_COMPRESSION_TYPE                  "xz" )
# Enable inter-component dependencies.
set( CPACK_DEBIAN_ENABLE_COMPONENT_DEPENDS          YES )
# Use dpkg-shlibdeps tool.
set( CPACK_DEBIAN_PACKAGE_SHLIBDEPS                 YES )
# Generate shlibs file.
set( CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS           YES )
set( CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY    "=" )
# Enforce Debian policy on control-files.
set( CPACK_DEBIAN_PACKAGE_CONTROL_STRICT_PERMISSION YES )
# Set package version.
set( CPACK_DEBIAN_PACKAGE_RELEASE                   "1" )
if (DEFINED CPACK_PACKAGE_BUILD_NUM)
    set( CPACK_DEBIAN_PACKAGE_RELEASE               "${CPACK_PACKAGE_BUILD_NUM}" )
endif()
set( CPACK_DEBIAN_PACKAGE_COMBINED_VERSION          "${CPACK_PACKAGE_VERSION}-${CPACK_DEBIAN_PACKAGE_RELEASE}" )

# Create *.ddeb packages for debug-symbols.
# Note: This is currently disabled because that does not fit the way the binaries are built.
#set( CPACK_DEBIAN_DEBUGINFO_PACKAGE  ON )

# Load extra settings?
if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/cpack_extra_settings_${CPACK_BUILD_CONFIG}.cmake")
    include( "${CMAKE_CURRENT_LIST_DIR}/cpack_extra_settings_${CPACK_BUILD_CONFIG}.cmake" )
endif()


# ----------------------------------------------------------------------
# Component-specific settings for using the DEB-generator
# ----------------------------------------------------------------------
if (CPACK_DEB_COMPONENT_INSTALL)

    # Only package components associated with the current project!
    string( REGEX REPLACE "(.)" "[\\1]" component_name_pattern "@project_component_prefix_fullname@" )
    list( FILTER CPACK_COMPONENTS_ALL INCLUDE REGEX "${component_name_pattern}.*" )
    if ( "@project_component_prefix_fullname@-Runtime" IN_LIST CPACK_COMPONENTS_ALL)
        list( APPEND CPACK_COMPONENTS_ALL "@project_component_prefix_fullname@-Development" )
        list( REMOVE_DUPLICATES CPACK_COMPONENTS_ALL )
    endif()

    # Omit "*-DebugSymbols" component if no debug-symbols file was generated!
    if (NOT CPACK_ENABLE_SEPARATE_DEBUGSYMBOLS OR
        NOT ("${CPACK_BUILD_CONFIG}" STREQUAL "Debug" OR "${CPACK_BUILD_CONFIG}" STREQUAL "RelWithDebInfo"))
        list( REMOVE_ITEM CPACK_COMPONENTS_ALL @project_component_prefix_fullname@-DebugSymbols )
    endif()

    # Determine compiler-tag part of the packages' names.
    if (DEFINED CPACK_COMPILER_TAG AND NOT "x${CPACK_COMPILER_TAG}x" STREQUAL "xx")
        set( compiler_tag "-${CPACK_COMPILER_TAG}" )
    else()
        set( compiler_tag "" )
    endif()

    # Set per-component package names.
    set( components "Runtime" "DebugSymbols" "Development" "Plugins"  "Documentation" )
    set( postfixes  ""        "-dbgsym"      "-dev"        "-plugins" "-doc" )
    foreach( component postfix IN ZIP_LISTS components postfixes )
        if ("@project_component_prefix_fullname@-${component}" IN_LIST CPACK_COMPONENTS_ALL)
            string( TOUPPER "@project_component_prefix_fullname@-${component}" COMP )
            set( CPACK_DEBIAN_${COMP}_PACKAGE_NAME       @project_package_fullname@${compiler_tag}${postfix} )
            set( CPACK_DEBIAN_${COMP}_FILE_NAME          DEB-DEFAULT )
            set( CPACK_DEBIAN_${COMP}_PACKAGE_SECTION    "libdevel" )
            set( CPACK_DEBIAN_${COMP}_PACKAGE_SHLIBDEPS  ON )
            if (component STREQUAL "Runtime" AND "@project_component_prefix_fullname@-DebugSymbols" IN_LIST CPACK_COMPONENTS_ALL)
                set( CPACK_DEBIAN_${COMP}_PACKAGE_SUGGESTS  "${CPACK_DEBIAN_${COMP}_PACKAGE_NAME}-dbgsym (= ${CPACK_DEBIAN_PACKAGE_COMBINED_VERSION})" )
            endif()
        endif()
    endforeach()

endif()
